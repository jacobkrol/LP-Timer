{"version":3,"sources":["graphics/lp-logo.png","audio/30-seconds-verbal.wav","audio/60-seconds-verbal.wav","audio/90-seconds-verbal.wav","components/utilities/GotoHome.js","components/utilities/Footer.js","components/utilities/ButtonPanel.js","components/pages/HomePage.js","components/utilities/Timer.js","components/pages/ExtPage.js","components/pages/ImpPage.js","components/pages/TimerPage.js","components/pages/GuidePage.js","components/pages/AboutPage.js","components/pages/Error404Page.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","GotoHome","to","src","LPLogo","alt","Footer","ButtonPanel","HomePage","Timer","props","startTimer","state","status","setState","startT","Date","getTime","updateInterval","setInterval","updateTimer","pauseSum","pauseT","document","getElementById","innerText","toUpperCase","substr","pauseTimer","min","sec","ms","now","Math","floor","ceil","abs","mode","showMS","isOvertime","Number","playVerbal","isMuted","signalText","includes","stopTimer","clearInterval","handleKeyPush","evt","console","log","keyCode","addEventListener","this","prevProps","prevState","verbal","Verbal30","Verbal60","Verbal90","player","play","id","ref","className","onClick","size","React","PureComponent","ExtPage","ImpPage","TimerPage","HowPage","AboutPage","action","method","encType","type","name","required","placeholder","value","href","target","rel","Error404Page","App","exact","path","component","GuidePage","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","URL","process","origin","fetch","headers","response","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.7481bd85.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/lp-logo.0cf386b2.png\";","module.exports = __webpack_public_path__ + \"static/media/30-seconds-verbal.387bfa74.wav\";","module.exports = __webpack_public_path__ + \"static/media/60-seconds-verbal.3ce36467.wav\";","module.exports = __webpack_public_path__ + \"static/media/90-seconds-verbal.d15918e6.wav\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../../styles/GotoHome.css';\r\nimport LPLogo from '../../graphics/lp-logo.png';\r\n\r\nfunction GotoHome() {\r\n    return (\r\n        <Link to=\"/LP-Timer\"><img src={LPLogo} alt=\"Home\" /></Link>\r\n    )\r\n}\r\n\r\nexport default GotoHome;\r\n","import React from 'react';\r\nimport '../../styles/Footer.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer>\r\n            <p>Limited Preparation Timer Web Application 2020 - <Link to=\"/about\">Learn More</Link></p>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport '../../styles/ButtonPanel.css';\r\n\r\nfunction ButtonPanel() {\r\n    return (\r\n        <ul>\r\n            <li><Link to=\"/ext\">Extemporaneous</Link></li>\r\n            <li><Link to=\"/imp\">Impromptu</Link></li>\r\n            <li><Link to=\"/timer\">Plain Timer</Link></li>\r\n            <li><Link to=\"/guide\">How To Use</Link></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default ButtonPanel;\r\n","import React from 'react';\r\nimport ButtonPanel from '../utilities/ButtonPanel';\r\n\r\nfunction HomePage() {\r\n    return (\r\n        <div>\r\n            <header>\r\n                <h1>LimitedPrep Timer</h1>\r\n            </header>\r\n            <ButtonPanel />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePage;\r\n","import React from 'react';\r\nimport { FaPlay, FaPause, FaStop, FaVolumeMute } from 'react-icons/fa';\r\nimport '../../styles/Timer.css';\r\nimport Verbal30 from '../../audio/30-seconds-verbal.wav';\r\nimport Verbal60 from '../../audio/60-seconds-verbal.wav';\r\nimport Verbal90 from '../../audio/90-seconds-verbal.wav';\r\n\r\n// ---- PROPS ----\r\n// props.mode (req.) = \"imp\" \"ext\" \"none\" [\"custom\"] for timer mode\r\n// props.min (req.) = integer representing number of minutes\r\n// props.showMS (opt.) = default false, boolean\r\n\r\nclass Timer extends React.PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            startT: 0,              //time stamp of timer start\r\n            pauseT: 0,              //time stamp of most recent pause\r\n            pauseSum: 0,            //sum of ms spent on pause\r\n            updateInterval: null,   //holder for timer dom interval\r\n            status: \"off\",          //off, running, paused\r\n            signalText: null,       //string of hand signals\r\n            isOvertime: false,      //boolean flagging overtime\r\n            isMuted: true,          //boolean to mute verbals\r\n            playVerbal: 0           //int 0,30,60,90 for last verbal given\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        //listen for hotkeys\r\n        document.addEventListener(\"keydown\",this.handleKeyPush);\r\n        //unmute impromptu mode\r\n        if(this.props.mode === \"imp\") this.setState({isMuted: false});\r\n        //font debugging\r\n        if(this.props.mode === \"test\") this.setState({signalText: \"30 sec\"});\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        //clear timer interval if exists\r\n        if(this.state.updateInterval) {\r\n            clearInterval(this.state.updateInterval);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        //if reaching new 30 sec interval &&\r\n        //not muted\r\n        if(this.state.playVerbal !== prevState.playVerbal && !this.state.isMuted) {\r\n            let verbal;\r\n            switch(this.state.playVerbal) {\r\n                case 0:\r\n                    break;\r\n                case 30:\r\n                    verbal = Verbal30;\r\n                    break;\r\n                case 60:\r\n                    verbal = Verbal60;\r\n                    break;\r\n                case 90:\r\n                    verbal = Verbal90;\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            if(verbal) {\r\n                this.player.src = verbal;\r\n                this.player.play();\r\n            }\r\n        }\r\n    }\r\n\r\n    startTimer = () => {\r\n        //if timer has not yet started...\r\n        if(this.state.status === \"off\") {\r\n            //set start time &\r\n            //begin and save update interval\r\n            this.setState({\r\n                startT: (new Date()).getTime(),\r\n                updateInterval: setInterval(this.updateTimer, 10)\r\n            });\r\n        //if timer is being resumed...\r\n        } else {\r\n            //update sum of ms spent on pause\r\n            this.setState({pauseSum: this.state.pauseSum+(new Date()).getTime()-this.state.pauseT});\r\n        }\r\n\r\n        //update timer status and print to DOM\r\n        this.setState({status: \"running\"}, () => {\r\n            document.getElementById(\"timer-status\").innerText = this.state.status[0].toUpperCase()+this.state.status.substr(1);\r\n        });\r\n    }\r\n\r\n    pauseTimer = () => {\r\n        //mark pause time mark &\r\n        //update timer status and print to DOM\r\n        this.setState({\r\n            pauseT: (new Date()).getTime(),\r\n            status: \"paused\"\r\n        }, () => {\r\n            document.getElementById(\"timer-status\").innerText = this.state.status[0].toUpperCase()+this.state.status.substr(1);\r\n        });\r\n    }\r\n\r\n    updateTimer = () => {\r\n        //initialize values for calculation\r\n        const now = (new Date()).getTime();\r\n        let min, sec, ms;\r\n\r\n        //update DOM with time remaining\r\n        if(this.state.status === \"running\") {\r\n            //calculate time remaining\r\n            min = Math.floor((this.props.min*60*1000-(now-this.state.startT-this.state.pauseSum))/60/1000);\r\n            sec = 61-Math.ceil((now-this.state.startT-this.state.pauseSum)/1000%60);\r\n            if(sec === 60) { min++; sec=0 }\r\n            sec = sec < 10 ? \"0\"+sec : sec;\r\n            ms = 1000-Math.ceil((now-this.state.startT-this.state.pauseSum)%1000);\r\n            ms = ms < 100 ? ms < 10 ? '00'+ms : '0'+ms : ms;\r\n\r\n            //correct calculation if overtime\r\n            if(min<0) {\r\n                min = \"+\"+Math.abs(min+1);\r\n                sec = 60-sec;\r\n                sec = sec < 10 ? \"0\"+sec : sec;\r\n                ms = 1000-ms;\r\n                ms = ms < 100 ? ms < 10 ? '00'+ms : '0'+ms : ms;\r\n            }\r\n\r\n            if(this.props.mode===\"none\") {\r\n                //print updated values to DOM\r\n                document.getElementById(\"timer-display-min\").innerText = min;\r\n                document.getElementById(\"timer-display-sec\").innerText = sec;\r\n                if(this.props.showMS) document.getElementById(\"timer-display-ms\").innerText = ms;\r\n            } else {\r\n                //set time signals\r\n                if(!this.state.isOvertime) {\r\n                    //verbal signals\r\n                    if(Number(min) === this.props.min-1 && Number(sec) === 30) {\r\n                        //trigger 30 second verbal\r\n                        this.setState({playVerbal: 30});\r\n                    } else if(Number(min) === this.props.min-1 && Number(sec) === 0) {\r\n                        //trigger 60 second verbal\r\n                        this.setState({playVerbal: 60});\r\n                    } else if(Number(min) === this.props.min-2 && Number(sec) === 30) {\r\n                        //trigger 90 second verbal\r\n                        this.setState({playVerbal: 90, isMuted: true});\r\n                    }\r\n\r\n                    //hand signals\r\n                    if(Number(min) < 6 && Number(min) > 0 && Number(sec) === 0 && this.state.signalText === null) {\r\n                        //whole minute signals\r\n                        this.setState({signalText: Number(min)+\" min\"});\r\n                    } else if(Number(min) < 5 && Number(sec) === 55 && this.state.signalText !== null) {\r\n                        //hide after 5 seconds\r\n                        this.setState({signalText: null});\r\n                    } else if(Number(min) === 0 && [30,15,5,4,3,2,1].includes(Number(sec))) {\r\n                        //30, 15, last 5 signals\r\n                        this.setState({signalText: Number(sec)+\" sec\"});\r\n                    } else if(Number(min) === 0 && [25,10].includes(Number(sec)) && this.state.signalText !== null) {\r\n                        //hide after 5 seconds\r\n                        this.setState({signalText: null});\r\n                    } else if(Number(min) === 0 && Number(sec) === 0) {\r\n                        //time up signal, flag overtime\r\n                        this.setState({signalText: \"TIME UP\", isOvertime: true});\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    stopTimer = () => {\r\n        //cancel timer interval to avoid filling main thread\r\n        clearInterval(this.state.updateInterval);\r\n        //clear timer display\r\n        if(this.props.mode === \"none\") {\r\n            document.getElementById(\"timer-display-min\").innerText = this.props.min;\r\n            document.getElementById(\"timer-display-sec\").innerText = '00';\r\n            if(this.props.showMS) document.getElementById(\"timer-display-ms\").innerText = '000';\r\n        } else {\r\n            document.getElementById(\"timer-display-signal\").innerText = null;\r\n        }\r\n        //unmute if in impromptu mode\r\n        if(this.props.mode === \"imp\") this.setState({isMuted: false});\r\n        //clear all state values &\r\n        //update timer status and print to DOM\r\n        this.setState({\r\n            startT: 0,\r\n            pauseT: 0,\r\n            pauseSum: 0,\r\n            updateInterval: null,\r\n            status: \"off\"\r\n        }, () => {\r\n            document.getElementById(\"timer-status\").innerText = this.state.status[0].toUpperCase()+this.state.status.substr(1);\r\n        });\r\n    }\r\n\r\n    handleKeyPush = (evt) => {\r\n        console.log(\"key push event with \"+evt.keyCode);\r\n        switch(evt.keyCode) {\r\n            case 32:\r\n                //space bar\r\n                this.state.status === \"running\" ? this.pauseTimer() : this.startTimer();\r\n                break;\r\n            case 13:\r\n                //enter key\r\n                if(this.state.isMuted === false) this.setState({isMuted: true});\r\n                break;\r\n            default:\r\n                console.log(\"unrecognized key pressed: \"+evt.keyCode);\r\n                break;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"timer-container\">\r\n                <audio ref={ref => this.player = ref} />\r\n                <div id=\"timer-control-panel\">\r\n                    <p id=\"timer-status-container\">Status: <span id=\"timer-status\">Off</span></p>\r\n                    <div>\r\n                        {this.state.status === \"running\"\r\n                            ? <FaPause id=\"pause-button\" className=\"timer-button\" onClick={this.pauseTimer} alt=\"pause\" size={30} />\r\n                            : <FaPlay id=\"play-button\" className=\"timer-button\" onClick={this.startTimer} alt=\"play\" size={30} />\r\n                        }\r\n                        <FaStop id=\"stop-button\" className=\"timer-button\" onClick={this.stopTimer} alt=\"stop\" size={30} />\r\n                        {!this.state.isMuted\r\n                            ? <FaVolumeMute id=\"mute-button\" className=\"timer-button\" onClick={() => this.setState({isMuted: true})} alt=\"mute\" size={30} />\r\n                            : null\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div id=\"timer-display\">\r\n                    {this.props.mode === \"none\"\r\n                        ? this.props.showMS\r\n                            ? <p><span id=\"timer-display-min\">{this.props.min}</span><span id=\"timer-display-sec\">00</span><span id=\"timer-display-ms\">000</span></p>\r\n                            : <p><span id=\"timer-display-min\">{this.props.min}</span><span id=\"timer-display-sec\">00</span></p>\r\n                        : <p><span id=\"timer-display-signal\">{this.state.signalText}</span></p>\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Timer;\r\n","import React from 'react';\r\nimport Timer from '../utilities/Timer';\r\n\r\nfunction ExtPage() {\r\n    return (\r\n        <>\r\n            <Timer mode=\"ext\" min={7} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ExtPage;\r\n","import React from 'react';\r\nimport Timer from '../utilities/Timer';\r\n\r\nfunction ImpPage() {\r\n    return (\r\n        <>\r\n            <Timer mode=\"imp\" min={7} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ImpPage;\r\n","import React from 'react';\r\nimport Timer from '../utilities/Timer';\r\n\r\nfunction TimerPage() {\r\n    return (\r\n        <>\r\n            <Timer mode=\"none\" min={7} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TimerPage;\r\n","import React from 'react';\r\nimport '../../styles/GuidePage.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { FaPlay, FaPause, FaStop, FaVolumeMute } from 'react-icons/fa';\r\nimport { FiShare } from 'react-icons/fi';\r\nimport { RiAddBoxLine } from 'react-icons/ri';\r\nimport { BsThreeDotsVertical } from 'react-icons/bs';\r\nimport LPLogo from '../../graphics/lp-logo.png';\r\n\r\nfunction HowPage() {\r\n    return (\r\n        <div id=\"how-page\">\r\n            <h1>User Guide</h1>\r\n            <h3>General Controls</h3>\r\n                <p>Navigate to the <Link to=\"/LP-Timer\">home page</Link> at any time using the <img id=\"logo-tiny\" src={LPLogo} alt=\"logo\" /> in the top left corner of every page.</p>\r\n                <p>Click <FaPlay className=\"button\" size={12} alt=\"play\" /> or press SPACE to begin or resume the timer. Click <FaPause className=\"button\" size={12} alt=\"pause\" /> or press SPACE to pause the timer. Click <FaStop className=\"button\" size={12} alt=\"stop\" /> to stop and reset the timer. Refreshing the page also resets the timer.</p>\r\n                <p><strong>Status: Off</strong> represents a new timer.</p>\r\n                <p><strong>Status: Running</strong> means the timer is running (even if you can't see it!)</p>\r\n                <p><strong>Status: Paused</strong> represents a timer that has started, but has been paused by the user. When it is resumed, it will continue where it was when paused.</p>\r\n\r\n            <h3>Extemporaneous Timer</h3>\r\n                <p><strong>Duration:</strong> 7 minutes</p>\r\n                <p><strong>Visual Signals:</strong> 5 min, 4 min, 3 min, 2 min, 1 min, 30 sec, 15 sec, 5 sec, 4 sec, 3 sec, 2 sec, 1 sec, TIME UP</p>\r\n            <h3>Impromptu Timer</h3>\r\n                <p><strong>Duration:</strong> 7 minutes</p>\r\n                <p><strong>Verbal Signals:</strong> 30 sec, 1 min, 1 min 30 sec</p>\r\n                <p><strong>Visual Signals:</strong> 5 min, 4 min, 3 min, 2 min, 1 min, 30 sec, 15 sec, 5 sec, 4 sec, 3 sec, 2 sec, 1 sec, TIME UP</p>\r\n                <p>Click <FaVolumeMute className=\"button\" size={12} alt=\"mute\" /> or press ENTER to mute remaining verbal signals.</p>\r\n            <h3>Plain Timer</h3>\r\n                <p><strong>Duration:</strong> 7 minutes</p>\r\n                <p>This mode acts as a regular timer, allowing the user to see every second (and millisecond, if desired) as it counts down.</p>\r\n            <h3>Save This App</h3>\r\n                <p>You can also locally save this app on your mobile device! It appears like a regular app, so it can be easily launched from the home screen, requires no internet connection<sup>1</sup>, and takes up very little storage space<sup>2</sup>. To save the app...</p>\r\n                <p><strong>iOS:</strong> Click <FiShare size={15} alt=\"share\" />, and then select \"Add to Home Screen <span className=\"no-break\"><RiAddBoxLine size={15} alt=\"add icon\" />\"</span></p>\r\n                <p><strong>Android:</strong> Click <BsThreeDotsVertical size={15} alt=\"three dots\" />, and then select \"Add to Home screen\"</p>\r\n                <span className=\"fine-print\">\r\n                    <p><sup>1</sup>&nbsp;&nbsp;Until your default browser cache is cleared</p>\r\n                    <p><sup>2</sup>&nbsp;&nbsp;&lt;1.0Mb</p>\r\n                </span>\r\n            <h3>More Info</h3>\r\n                <p>To read more about how this website works (for the other nerds), or to submit a bug / feature request for review, visit the <Link to=\"/about\">about page</Link>.</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HowPage;\r\n","import React from 'react';\r\nimport '../../styles/AboutPage.css';\r\nimport { FiAlertTriangle } from 'react-icons/fi';\r\n\r\nfunction AboutPage() {\r\n    return (\r\n        <div id=\"about-page\">\r\n            <h1>About this App</h1>\r\n            <h3>Submit Feedback</h3>\r\n                <p>Found a bug? Encountered an accessibility concern? Want to see a new feature added? Let me know!</p>\r\n                <form action=\"mailto:phone12.jk@gmail.com\" method=\"get\" encType=\"text/plain\">\r\n                    <label>Your Name:</label>\r\n                    <input type=\"text\" name=\"name\" required />\r\n                    <label>Your Email:</label>\r\n                    <input type=\"email\" name=\"email\" placeholder=\"name@example.com\" required />\r\n                    <label>Title of Feedback:</label>\r\n                    <input type=\"text\" name=\"title\" placeholder=\"Ex: Verbals not working\" required />\r\n                    <label>Type of Feedback:</label>\r\n                    <select name=\"type\" required>\r\n                        <option value=\"\">Choose one...</option>\r\n                        <option value=\"bug\">Bug (something isn't working)</option>\r\n                        <option value=\"enhancement\">Enhancement (new feature or request)</option>\r\n                        <option value=\"question\">Question (further information is requested)</option>\r\n                        <option value=\"concern\">Concern (non-breaking but should be resolved)</option>\r\n                    </select>\r\n                    <label>Feedback Details:</label>\r\n                    <textarea name=\"feedback\" placeholder=\"(optional, but encouraged)\"/>\r\n                    <input type=\"submit\" />\r\n                </form>\r\n                <p><FiAlertTriangle size={15} alt=\"attention\" /> Before submitting feedback, please check <a href=\"https://github.com/jacobkrol/LP-Timer/issues\" target=\"_blank\" rel=\"noopener noreferrer\">if I am already working on it</a>.</p>\r\n            <h3>App Infrastructure</h3>\r\n                <p>This Progressive Web Application is built using the JavaScript framework, <a href=\"https://reactjs.org\" target=\"_blank\" rel=\"noopener noreferrer\">ReactJS v16.13.1</a>.</p>\r\n                <p>It is hosted on GitHub Pages, and the code is entirely open-source for you to read, nitpick, and expand upon. It can be found on <a href=\"https://github.io/jacobkrol/LP-Timer\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub</a>.</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AboutPage;\r\n","import React from 'react';\r\n\r\nfunction Error404Page() {\r\n    return (\r\n        <div>\r\n            <h1>Sorry&nbsp;&nbsp;&gt;_&lt;</h1>\r\n            <h2>We couldn't find the page you were looking for.</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error404Page;\r\n","import React from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route\n} from 'react-router-dom';\n\nimport GotoHome from './utilities/GotoHome';\nimport Footer from './utilities/Footer';\nimport HomePage from './pages/HomePage';\nimport ExtPage from './pages/ExtPage';\nimport ImpPage from './pages/ImpPage';\nimport TimerPage from './pages/TimerPage';\nimport GuidePage from './pages/GuidePage';\nimport AboutPage from './pages/AboutPage';\nimport Error404Page from './pages/Error404Page';\n\nfunction App() {\n  return (\n    <Router>\n        <div className=\"page-container\">\n            <GotoHome />\n            <Switch>\n                <Route exact path=\"/LP-Timer\" component={HomePage} />\n                <Route path=\"/ext\" component={ExtPage} />\n                <Route path=\"/imp\" component={ImpPage} />\n                <Route path=\"/timer\" component={TimerPage} />\n                <Route path=\"/guide\" component={GuidePage} />\n                <Route path=\"/about\" component={AboutPage} />\n                <Route component={Error404Page} />\n            </Switch>\n            <Footer />\n        </div>\n    </Router>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}